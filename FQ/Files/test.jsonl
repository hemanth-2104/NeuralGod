{"project": "", "commit_id": "", "target": -1, "func": "AVStream *avformat_new_stream(AVFormatContext *s, const AVCodec *c)\n\n{\n\n    AVStream *st;\n\n    int i;\n\n    AVStream **streams;\n\n    if (s->nb_streams >= INT_MAX / sizeof(*streams))\n\n        streams = av_realloc_array(s->streams, s->nb_streams + 1, sizeof(*streams));\n\n    if (!streams)\n\n        s->streams = streams;\n\n    st = av_mallocz(sizeof(AVStream));\n\n    if (!st)\n\n        if (!(st->info = av_mallocz(sizeof(*st->info))))\n\n        {\n\n            st->info->last_dts = AV_NOPTS_VALUE;\n\n            st->codec = avcodec_alloc_context3(c);\n\n            if (s->iformat)\n\n            {\n\n                /* no default bitrate if decoding */ st->codec->bit_rate = 0;\n\n                /* default pts setting is MPEG-like */ avpriv_set_pts_info(st, 33, 1, 90000);\n\n                st->index = s->nb_streams;\n\n                st->start_time = AV_NOPTS_VALUE;\n\n                st->duration = AV_NOPTS_VALUE;\n\n                /* we set the current DTS to 0 so that formats without any timestamps       * but durations get some timestamps, formats with some unknown       * timestamps have their first few packets buffered and the       * timestamps corrected before they are returned to the user */ st->cur_dts = s->iformat ? RELATIVE_TS_BASE : 0;\n\n                st->first_dts = AV_NOPTS_VALUE;\n\n                st->probe_packets = MAX_PROBE_PACKETS;\n\n                st->pts_wrap_reference = AV_NOPTS_VALUE;\n\n                st->pts_wrap_behavior = AV_PTS_WRAP_IGNORE;\n\n                st->last_IP_pts = AV_NOPTS_VALUE;\n\n                st->last_dts_for_order_check = AV_NOPTS_VALUE;\n\n                for (i = 0; i < MAX_REORDER_DELAY + 1; i++)\n\n                    st->pts_buffer[i] = AV_NOPTS_VALUE;\n\n                st->sample_aspect_ratio = (AVRational){0, 1};\n\n#if FF_API_R_FRAME_RATE st->info->last_dts = AV_NOPTS_VALUE;\n\n#endif st->info->fps_first_dts = AV_NOPTS_VALUE;\n\n                st->info->fps_last_dts = AV_NOPTS_VALUE;\n\n                st->inject_global_side_data = s->internal->inject_global_side_data;\n\n                s->streams[s->nb_streams++] = st;\n\n                return st;\n\n", "idx": "-1"}